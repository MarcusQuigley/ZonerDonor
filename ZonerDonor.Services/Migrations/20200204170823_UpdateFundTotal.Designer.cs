// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZonerDonor.Services;

namespace ZonerDonor.Services.Migrations
{
    [DbContext(typeof(FundContext))]
    [Migration("20200204170823_UpdateFundTotal")]
    partial class UpdateFundTotal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZonerDonor.Core.Models.Donation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTimeOffset>("DonationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FundraiserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b605f1cb-dcf9-4087-a0b2-6c38475bda8e"),
                            Amount = 40m,
                            DonationDate = new DateTimeOffset(new DateTime(2020, 2, 4, 12, 8, 22, 701, DateTimeKind.Unspecified).AddTicks(7706), new TimeSpan(0, -5, 0, 0, 0)),
                            DonorId = new Guid("1c2c642c-3a9c-4053-b5ed-07e9c44f109d"),
                            FundraiserId = new Guid("bd5f9fb5-bd76-446f-8e06-d1f4cc24dfc1")
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Donor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Donors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c2c642c-3a9c-4053-b5ed-07e9c44f109d"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 1, 5, 12, 8, 22, 697, DateTimeKind.Unspecified).AddTicks(4186), new TimeSpan(0, -5, 0, 0, 0)),
                            Name = "Marcus"
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Fundraiser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("CurrentTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fundraisers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd5f9fb5-bd76-446f-8e06-d1f4cc24dfc1"),
                            Amount = 10000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 1, 12, 8, 22, 701, DateTimeKind.Unspecified).AddTicks(4263), new TimeSpan(0, -5, 0, 0, 0)),
                            CurrentTotal = 0m,
                            Name = "Pauls Extension"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
