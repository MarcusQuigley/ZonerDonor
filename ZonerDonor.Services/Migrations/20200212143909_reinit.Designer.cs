// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZonerDonor.Services;

namespace ZonerDonor.Services.Migrations
{
    [DbContext(typeof(FundContext))]
    [Migration("20200212143909_reinit")]
    partial class reinit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZonerDonor.Core.Models.Donation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTimeOffset>("DonationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FundraiserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c33b97c2-68f9-493a-909f-efc60d0b88dd"),
                            Amount = 40m,
                            DonationDate = new DateTimeOffset(new DateTime(2020, 2, 12, 9, 39, 9, 579, DateTimeKind.Unspecified).AddTicks(3161), new TimeSpan(0, -5, 0, 0, 0)),
                            DonorId = new Guid("a7def224-0b4a-43e6-874f-5ce4bb770b4a"),
                            FundraiserId = new Guid("4910d7d6-1fae-4895-8b50-eba56a64888d")
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Donor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Donors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7def224-0b4a-43e6-874f-5ce4bb770b4a"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 1, 13, 9, 39, 9, 573, DateTimeKind.Unspecified).AddTicks(3670), new TimeSpan(0, -5, 0, 0, 0)),
                            Name = "Marcus"
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Fundraiser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("CurrentTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fundraisers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4910d7d6-1fae-4895-8b50-eba56a64888d"),
                            Amount = 10000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 9, 9, 39, 9, 578, DateTimeKind.Unspecified).AddTicks(9687), new TimeSpan(0, -5, 0, 0, 0)),
                            CurrentTotal = 0m,
                            Name = "Pauls Extension"
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Donation", b =>
                {
                    b.HasOne("ZonerDonor.Core.Models.Donor", "Donor")
                        .WithMany()
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
