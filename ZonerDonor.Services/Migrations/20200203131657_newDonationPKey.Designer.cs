// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZonerDonor.Services;

namespace ZonerDonor.Services.Migrations
{
    [DbContext(typeof(FundContext))]
    [Migration("20200203131657_newDonationPKey")]
    partial class newDonationPKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZonerDonor.Core.Models.Donation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTimeOffset>("DonationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FundraiserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c35a51ef-8073-418e-ade0-9a91b2464e3a"),
                            Amount = 40m,
                            DonationDate = new DateTimeOffset(new DateTime(2020, 2, 3, 8, 16, 56, 664, DateTimeKind.Unspecified).AddTicks(2210), new TimeSpan(0, -5, 0, 0, 0)),
                            DonorId = new Guid("6a755722-5a2b-4e43-87b2-9f0295ee916f"),
                            FundraiserId = new Guid("ca696b1a-0110-4da3-9c1a-96add5373d98")
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Donor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Donors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a755722-5a2b-4e43-87b2-9f0295ee916f"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 1, 4, 8, 16, 56, 659, DateTimeKind.Unspecified).AddTicks(8003), new TimeSpan(0, -5, 0, 0, 0)),
                            Name = "Marcus"
                        });
                });

            modelBuilder.Entity("ZonerDonor.Core.Models.Fundraiser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("CurrentTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fundraisers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca696b1a-0110-4da3-9c1a-96add5373d98"),
                            Amount = 10000m,
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 1, 31, 8, 16, 56, 663, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, -5, 0, 0, 0)),
                            CurrentTotal = 0m,
                            Name = "Pauls Extension"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
